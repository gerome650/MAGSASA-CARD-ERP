# --- BEGIN: CI enforcement step (OPA deny blocks PR) ---
      - name: Enforce policy
        run: |
          # Replace these with real signals when available (from tests/metrics upload)
          CHAOS_FAILED=${{ env.CHAOS_FAILED || 'false' }}
          SLO_REGRESSIONS=${{ env.SLO_REGRESSIONS || '0' }}
          printf '{"chaos_failed": %s, "slo_regressions": %s}\n' "$CHAOS_FAILED" "$SLO_REGRESSIONS" > /tmp/input.json
          # Evaluate deny set
          opa eval -f json -i /tmp/input.json -d platform/gatekeeper/policies 'data.resilience.deny' | jq -r '.result[0].expressions[0].value' > /tmp/deny.json
          echo "OPA deny set:" && cat /tmp/deny.json
          # Fail if deny set not empty
          if [ "$(jq 'length' /tmp/deny.json)" -gt 0 ]; then
            echo "‚ùå Resilience policy denies this change"; exit 1;
          fi
# --- END: CI enforcement step ---
