name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Run ruff (linting)
        run: uv run ruff check packages/
      
      - name: Run black (formatting check)
        run: uv run black --check packages/
      
      - name: Run mypy (type checking)
        run: uv run mypy packages/ --ignore-missing-imports || true

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Run tests
        run: uv run pytest tests/ -v --tb=short --cov=packages --cov-report=xml || true
      
      - name: Upload coverage
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml

  mcp-dry-run:
    name: MCP Dry Run
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: uv sync --dev
      
      - name: Enable MCP Mode
        run: echo "AGS_MCP_ENABLED=true" >> $GITHUB_ENV
      
      - name: MCP Readiness Check
        run: uv run ags mcp-check
      
      - name: Run Agent Simulation
        run: uv run ags agent run all --trace
      
      - name: Validate Logs
        run: |
          uv run ags agent run all 2>&1 | grep -q "request_id" || exit 1
          uv run ags agent run all 2>&1 | grep -q "latency_ms" || exit 1
          echo "âœ… MCP dry run passed"

  build:
    name: Build Packages
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, mcp-dry-run]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Build packages
        run: uv build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
